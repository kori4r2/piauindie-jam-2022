name: Build On Demand

on:
  workflow_dispatch:
    inputs:
      targets:
        description: "Build Target(s)"
        required: false
        default: "linux windows web"

jobs:
  build-and-upload-webgl:
    if: |
      (github.event.inputs.targets == '' ||
      github.event.inputs.targets == 'all' ||
      contains(github.event.inputs.targets, 'web'))
    name: Generate And Upload WebGL Build Files
    runs-on: ubuntu-latest
    container: unityci/editor:ubuntu-2020.3.11f1-webgl-0.15.0
    env:
      DOTNET_ROOT: "/opt/unity/Editor/Data/NetCore/Sdk-2.2.107"

    steps:
      - name: Install dependencies
        run: |
          apt update && apt install sudo
          sudo apt-get install -y zip
          sudo apt-get install -y make

      - name: Activate unity
        # exit code is 1 for manual activation
        continue-on-error: true
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        run: |
          echo "$UNITY_LICENSE" | tr -d '\r' > UnityLicenseFile.ulf
          unity-editor -nographics -logFile /dev/stdout -manualLicenseFile UnityLicenseFile.ulf -quit | echo "Activation finished"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Library
        id: cache-library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-2020.3.11-webgl

      - name: Generate Build
        run: |
          make webgl UNITY_EXECUTABLE=unity-editor
          echo "WEB_BUILD_NAME=Web" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.WEB_BUILD_NAME }}
          path: ./Build/${{ env.WEB_BUILD_NAME }}

  build-and-upload-windows:
    if: |
      (github.event.inputs.targets != '' &&
      github.event.inputs.targets != 'all' &&
      contains(github.event.inputs.targets, 'windows'))
    name: Generate And Upload Windows Build Files
    runs-on: ubuntu-latest
    container: unityci/editor:ubuntu-2020.3.11f1-windows-mono-0.15.0
    env:
      DOTNET_ROOT: "/opt/unity/Editor/Data/NetCore/Sdk-2.2.107"

    steps:
      - name: Install dependencies
        run: |
          apt update && apt install sudo
          sudo apt-get install -y zip
          sudo apt-get install -y make

      - name: Activate unity
        # exit code is 1 for manual activation
        continue-on-error: true
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        run: |
          echo "$UNITY_LICENSE" | tr -d '\r' > UnityLicenseFile.ulf
          unity-editor -nographics -logFile /dev/stdout -manualLicenseFile UnityLicenseFile.ulf -quit | echo "Activation finished"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Library
        id: cache-library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-2020.3.11-windows

      - name: Generate Build
        run: |
          make windows UNITY_EXECUTABLE=unity-editor
          echo "WINDOWS_BUILD_NAME=Windows" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.WINDOWS_BUILD_NAME }}
          path: ./Build/${{ env.WINDOWS_BUILD_NAME }}

  build-and-upload-linux:
    if: |
      (github.event.inputs.targets != '' &&
      github.event.inputs.targets != 'all' &&
      contains(github.event.inputs.targets, 'linux'))
    name: Generate And Upload Linux Build Files
    runs-on: ubuntu-latest
    container: unityci/editor:ubuntu-2020.3.11f1-base-0.15.0
    env:
      DOTNET_ROOT: "/opt/unity/Editor/Data/NetCore/Sdk-2.2.107"

    steps:
      - name: Install dependencies
        run: |
          apt update && apt install sudo
          sudo apt-get install -y zip
          sudo apt-get install -y make

      - name: Activate unity
        # exit code is 1 for manual activation
        continue-on-error: true
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        run: |
          echo "$UNITY_LICENSE" | tr -d '\r' > UnityLicenseFile.ulf
          unity-editor -nographics -logFile /dev/stdout -manualLicenseFile UnityLicenseFile.ulf -quit | echo "Activation finished"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Library
        id: cache-library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-2020.3.11-linux

      - name: Generate Build
        run: |
          make linux UNITY_EXECUTABLE=unity-editor
          echo "LINUX_BUILD_NAME=Linux" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.LINUX_BUILD_NAME }}
          path: ./Build/${{ env.LINUX_BUILD_NAME }}